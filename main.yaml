---
- hosts: all
  gather_facts: no
  become: true

  tasks:
  # # Create user
  # - name: Add a new user
  #   ansible.builtin.user:
  #     name: "{{ username }}"
  #     shell: /bin/bash
  #     group: sudo
  #     generate_ssh_key: yes
  #     force: yes
  #     state: present
  #     password: "{{ db_password }}"
  #   register: new_user
  
  # - name: Add a user to the sudoers
  #   ansible.builtin.copy:
  #     dest: "/etc/sudoers.d/{{ username }}"
  #     content: "{{ username }}  ALL=(ALL)  NOPASSWD: ALL"
  #   notify:
  #     - restart ssh

  # - name: Disable password authentication
  #   lineinfile:
  #     dest=/etc/ssh/sshd_config
  #     regexp='^PasswordAuthentication'
  #     line="PasswordAuthentication no"
  #     state=present
  #     backup=yes
  #   notify:
  #     - restart ssh

  # - name: Disable Root Login
  #   lineinfile:
  #     dest=/etc/ssh/sshd_config
  #     regexp='^PermitRootLogin'
  #     line="PermitRootLogin no"
  #     state=present
  #     backup=yes
  #   notify:
  #     - restart ssh

  # # # # Install Docker
  # - name: Install Docker dependencies
  #   ansible.builtin.apt:
  #     name: "{{ item }}"
  #     state: latest
  #     update_cache: true
  #   loop:
  #     # - apt-transport-https
  #     # - ca-certificates
  #     # - curl
  #     # - software-properties-common
  #     # - gnupg-agent
  #     # - python3-psycopg2  # for PostgreSQL
  #     - acl  # for PostgreSQL   

  # # - name: Add Docker GPG apt Key
  # #   ansible.builtin.apt_key:
  # #     url: https://download.docker.com/linux/ubuntu/gpg
  # #     state: present

  # # - name: Add Docker Repository
  # #   ansible.builtin.apt_repository:
  # #     repo: deb https://download.docker.com/linux/ubuntu focal stable
  # #     state: present

  # # - name: Update apt and install docker-ce
  # #   ansible.builtin.apt:
  # #     name: docker-ce
  # #     state: latest
  # #     update_cache: true

  # # - name: Start docker
  # #   ansible.builtin.service:
  # #     name: docker
  # #     enabled: true
  # #     state: started

  # # Install PostgreSQL
  # - name: Install postgresql
  #   ansible.builtin.apt:
  #     name: "{{ item }}"
  #     state: latest
  #     update_cache: true
  #   loop:
  #     - "postgresql-{{ version }}"
  #     - postgresql-contrib

  # # - name: fix postgresql.conf
  # #   lineinfile:
  # #     dest: "/etc/postgresql/{{ version }}/main/postgresql.conf"
  # #     state: present
  # #     regexp: "^data_directory ="
  # #     line: "data_directory = '{{ data_directory }}/postgresql/{{ version }}/main'"

  # - name: start postgresql
  #   ansible.builtin.service:
  #     name: postgresql
  #     state: started

  # # Creating a database and adding user
  # - name: Create a database
  #   become: true
  #   become_user: postgres
  #   vars:
  #     allow_world_readable_tmpfiles: true
  #   postgresql_db:
  #     name: "{{ db_name }}"
  #     state: present
  
  - name: Ensure user has access to the new database
    become: true
    become_user: postgres
    vars:
      allow_world_readable_tmpfiles: true
    postgresql_user:
      db: "{{ db_name }}"
      name: "{{ username }}"
      password: "{{ db_password }}"
      priv: ALL
      state: present

  handlers:
  - name: restart ssh
    service:
      name: sshd
      state: restarted
